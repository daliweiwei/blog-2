(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{788:function(t,s,a){"use strict";a.r(s);var n=a(66),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("  默认情况 Spring 提供或实现的容器配置注解不会生效，需要手动配置实现。由 3 中开启类型注解的方式：")]),t._v(" "),a("h2",{attrs:{id:"配置实现注解功能的-beanpostprocessor-的-bean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置实现注解功能的-beanpostprocessor-的-bean"}},[t._v("#")]),t._v(" 配置实现注解功能的 BeanPostProcessor 的 Bean")]),t._v(" "),a("p",[t._v("  对于使用容器扩展点的 BeanPostProcessor 实现的注解来说，注解的开启，只需要在配置文件中加上注解处理类的 Bean 配置。")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 公共注解的处理类的Bean的定义 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("org.springframework.beans.factory.annotation.CommonAnnotationBeanPostProcessor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("  AutowiredAnnotationBeanPostProcessor、RequiredAnnotationBeanPostProcessor、PersistenceAnnotationBeanPostProcessor 配置方式相似。")]),t._v(" "),a("h2",{attrs:{id:"使用-context-annotation-config-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-context-annotation-config-标签"}},[t._v("#")]),t._v(" 使用<context:annotation-config>标签")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("context:")]),t._v("annotation-config")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 开启注解配置 --\x3e")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("  相当于一次性在容器注册 CommonAnnotationBeanPostProcessor、AutowiredAnnotationBeanPostProcessor、RequiredAnnotationBeanPostProcessor、PersistenceAnnotationBeanPostProcessor 4 种 PostProcessor 的 Bean。")]),t._v(" "),a("p",[t._v("  使用 context 标签，需要在 beans 元素中添加 context 的命名空间。")]),t._v(" "),a("h2",{attrs:{id:"使用-context-component-scan-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-context-component-scan-标签"}},[t._v("#")]),t._v(" 使用<context:component-scan>标签")]),t._v(" "),a("p",[t._v("  前面两种方式并不会开启@Component 等组件的注解功能。要开启此类型注解，需要进行路径扫描的配置：")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 包扫描配置 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("context:")]),t._v("component-scan")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("bask-package")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.staven.ssmi.anno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("  base-package 属性用于设置扫描的路径，多个路径间使用逗号分隔。")]),t._v(" "),a("p",[t._v("  配置了 component-scan，也就开启了@Autowired、@Required 和@Resource 等注解功能，就不需要使用配置 annotation-config 了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);